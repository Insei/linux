/*
 * arch/arm/boot/dts/tegra124-mocha.dts
 *
 * Copyright (c) 2018, Alexandrov Dmirty.  All rights reserved.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 */
/dts-v1/;

#include "tegra124.dtsi"
#include "tegra124-mocha-emc.dtsi"
#include "tegra124-mocha-keys.dtsi"
#include "tegra124-mocha-pinmux.dtsi"
#include "tegra124-mocha-sdhci.dtsi"
#include "tegra124-mocha-pmic.dtsi"
#include "tegra124-mocha-fixed.dtsi"
#include "tegra124-mocha-i2c.dtsi"
#include "tegra124-mocha-display.dtsi"
#include "tegra124-mocha-touchscreens.dtsi"

/ {
	model = "NVIDIA Tegra124 MOCHA";
	compatible = "nvidia,mocha", "nvidia,tegra124";
	nvidia,boardids = "1780:1100:3:A:7","1845:1000:0:A:7";

	aliases {
		rtc0 = "/i2c@0,7000d000/pmic@58";
		rtc1 = "/rtc@0,7000e000";
	};

	memory {
		reg = <0x0 0x80000000 0x0 0x80000000>;
	};

	chosen {
		bootargs = "cros_legacy init=/init rw fbcon loglevel=0 debug earlyprintk drm.atomic=1 no_console_suspend";
	};

	reserved-memory {
		#address-cells = <2>;
		#size-cells = <2>;
		ranges;
	
		pstore: pstore {
			reg = <0 0xfd400000 0 0x200000>;
			compatible = "ramoops";
			record-size = <0x10000>;
			console-size = <0x80000>;
			pmsg-size = <0x40000>;
			ftrace-size = <0x80000>;
			rtrace-size = <0x80000>;
			no-map;
			status = "okay";
		};
	};

	psci {
		compatible = "arm,psci-0.2";
		method = "smc";
	};

	pwm@7000a000 {
		status = "okay";
	};

	gpu@0,57000000 {
		vdd-supply = <&vdd_gpu>;
		status = "okay";
	};

	/* CPU DFLL clock */
	clock@70110000 {
		status = "okay";
		vdd-cpu-supply = <&vdd_cpu>;
		nvidia,i2c-fs-rate = <400000>;
	};

	clocks {
		compatible = "simple-bus";
		#address-cells = <1>;
		#size-cells = <0>;

		clk32k_in: clock@0 {
			compatible = "fixed-clock";
			reg = <0>;
			#clock-cells = <0>;
			clock-frequency = <32768>;
		};
	};

	bcmdhd_wlan {
		compatible = "android,bcmdhd_wlan";
		sdhci-host = <&sdmmc1>;
		edp-consumer-name = "primary-wifi";
		interrupt-parent = <&gpio>;
		interrupts = <TEGRA_GPIO(U, 5) 0x14>;
		wlan-pwr-gpio = <&gpio TEGRA_GPIO(X, 7) 0>;
		status = "okay";
		fw_path = "/system/vendor/firmware/mocha_fw_bcmdhd.bin";
		nv_path = "/system/etc/mocha_nvram.txt";
		mac-address-file = "/system/etc/mocha_macaddr.txt";

		country_code_map {

			CC1 {
				iso_abbrev = "XV";
				custom_locale = "XV";
				custom_locale_rev = <0x3e5>;
			};

			CC2 {
				iso_abbrev = "US";
				custom_locale = "Q2";
				custom_locale_rev = <0x3e6>;
			};

			CC3 {
				iso_abbrev = "CA";
				custom_locale = "Q2";
				custom_locale_rev = <0x3e6>;
			};

			CC4 {
				iso_abbrev = "AT";
				custom_locale = "E0";
				custom_locale_rev = <0x3e2>;
			};

			CC5 {
				iso_abbrev = "BE";
				custom_locale = "E0";
				custom_locale_rev = <0x3e2>;
			};

			CC6 {
				iso_abbrev = "BG";
				custom_locale = "E0";
				custom_locale_rev = <0x3e2>;
			};

			CC7 {
				iso_abbrev = "HR";
				custom_locale = "E0";
				custom_locale_rev = <0x3e2>;
			};

			CC8 {
				iso_abbrev = "CZ";
				custom_locale = "E0";
				custom_locale_rev = <0x3e2>;
			};

			CC9 {
				iso_abbrev = "DK";
				custom_locale = "E0";
				custom_locale_rev = <0x3e2>;
			};

			CC10 {
				iso_abbrev = "FR";
				custom_locale = "E0";
				custom_locale_rev = <0x3e2>;
			};

			CC11 {
				iso_abbrev = "DE";
				custom_locale = "E0";
				custom_locale_rev = <0x3e2>;
			};

			CC12 {
				iso_abbrev = "GR";
				custom_locale = "E0";
				custom_locale_rev = <0x3e2>;
			};

			CC13 {
				iso_abbrev = "HU";
				custom_locale = "E0";
				custom_locale_rev = <0x3e2>;
			};

			CC14 {
				iso_abbrev = "IT";
				custom_locale = "E0";
				custom_locale_rev = <0x3e2>;
			};

			CC15 {
				iso_abbrev = "NL";
				custom_locale = "E0";
				custom_locale_rev = <0x3e2>;
			};

			CC16 {
				iso_abbrev = "NO";
				custom_locale = "E0";
				custom_locale_rev = <0x3e2>;
			};

			CC17 {
				iso_abbrev = "PL";
				custom_locale = "E0";
				custom_locale_rev = <0x3e2>;
			};

			CC18 {
				iso_abbrev = "PT";
				custom_locale = "E0";
				custom_locale_rev = <0x3e2>;
			};

			CC19 {
				iso_abbrev = "RO";
				custom_locale = "E0";
				custom_locale_rev = <0x3e2>;
			};

			CC20 {
				iso_abbrev = "SK";
				custom_locale = "E0";
				custom_locale_rev = <0x3e2>;
			};

			CC21 {
				iso_abbrev = "ES";
				custom_locale = "E0";
				custom_locale_rev = <0x3e2>;
			};

			CC22 {
				iso_abbrev = "SE";
				custom_locale = "E0";
				custom_locale_rev = <0x3e2>;
			};

			CC23 {
				iso_abbrev = "CH";
				custom_locale = "E0";
				custom_locale_rev = <0x3e2>;
			};

			CC24 {
				iso_abbrev = "GB";
				custom_locale = "E0";
				custom_locale_rev = <0x3e2>;
			};

			CC25 {
				iso_abbrev = "EU";
				custom_locale = "E0";
				custom_locale_rev = <0x3e2>;
			};

			CC26 {
				iso_abbrev = "E0";
				custom_locale = "E0";
				custom_locale_rev = <0x3e2>;
			};
		};
	};

	mipi: mipi@700e3000 {
		status = "okay";
	};

	cpus {
		cpu@0 {
			vdd-cpu-supply = <&vdd_cpu>;
			enable-method = "psci";
		};

		cpu@1 {
			enable-method = "psci";
		};

		cpu@2 {
			enable-method = "psci";
		};

		cpu@3 {
			enable-method = "psci";
		};
	};
	
	thermal-zones {
		cpu {
			trips {
				cpu-shutdown-trip {
					temperature = <101000>;
					hysteresis = <0>;
					type = "critical";
				};
			};
		};

		mem {
			trips {
				mem-shutdown-trip {
					temperature = <101000>;
					hysteresis = <0>;
					type = "critical";
				};
			};
		};

		gpu {
			trips {
				gpu-shutdown-trip {
					temperature = <101000>;
					hysteresis = <0>;
					type = "critical";
				};
			};
		};
	};
};
